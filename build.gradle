plugins {
    id 'java'
}

group = 'club.revived'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = 'https://jitpack.io/'
    }
    maven {
        url 'https://repo.xenondevs.xyz/releases'
    }
}

configurations {
    shade
    implementation.extendsFrom(shade)
}

jar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from {
        configurations.shade.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT"
    implementation 'com.github.Manered:Utils:v3.3.5'
    shade "com.github.Manered:Utils:3.3.5"
    implementation("me.xdrop:fuzzywuzzy:1.4.0")
    shade("me.xdrop:fuzzywuzzy:1.4.0")
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    implementation "xyz.xenondevs.invui:invui:1.32"
    shade("xyz.xenondevs.invui:invui:1.32")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
